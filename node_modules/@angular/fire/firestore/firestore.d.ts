import { InjectionToken, NgZone } from '@angular/core';
import { Observable } from 'rxjs';
import { Settings, PersistenceSettings, CollectionReference, DocumentReference, QueryFn, QueryGroupFn, AssociatedReference } from './interfaces';
import { AngularFirestoreDocument } from './document/document';
import { AngularFirestoreCollection } from './collection/collection';
import { AngularFirestoreCollectionGroup } from './collection-group/collection-group';
import { FirebaseFirestore, FirebaseOptions, FirebaseAppConfig, ɵAngularFireSchedulers } from '@angular/fire';
import { firestore } from 'firebase/app';
import * as ɵngcc0 from '@angular/core';
export declare const EnablePersistenceToken: InjectionToken<boolean>;
export declare const PersistenceSettingsToken: InjectionToken<firestore.PersistenceSettings | undefined>;
export declare const FirestoreSettingsToken: InjectionToken<firestore.Settings>;
export declare const ENABLE_PERSISTENCE: InjectionToken<boolean>;
export declare const PERSISTENCE_SETTINGS: InjectionToken<firestore.PersistenceSettings | undefined>;
export declare const SETTINGS: InjectionToken<firestore.Settings>;
export declare const DefaultFirestoreSettings: firestore.Settings;
export declare function associateQuery(collectionRef: CollectionReference, queryFn?: (ref: any) => any): AssociatedReference;
export declare class AngularFirestore {
    readonly firestore: FirebaseFirestore;
    readonly persistenceEnabled$: Observable<boolean>;
    readonly schedulers: ɵAngularFireSchedulers;
    readonly keepUnstableUntilFirst: <T>(obs: Observable<T>) => Observable<T>;
    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, shouldEnablePersistence: boolean | null, settings: Settings | null, platformId: Object, zone: NgZone, persistenceSettings: PersistenceSettings | null);
    collection<T>(path: string, queryFn?: QueryFn): AngularFirestoreCollection<T>;
    collection<T>(ref: CollectionReference, queryFn?: QueryFn): AngularFirestoreCollection<T>;
    collectionGroup<T>(collectionId: string, queryGroupFn?: QueryGroupFn): AngularFirestoreCollectionGroup<T>;
    doc<T>(path: string): AngularFirestoreDocument<T>;
    doc<T>(ref: DocumentReference): AngularFirestoreDocument<T>;
    createId(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularFirestore, [null, { optional: true; }, { optional: true; }, { optional: true; }, null, null, { optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AngularFirestore>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLmQudHMiLCJzb3VyY2VzIjpbImZpcmVzdG9yZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBTZXR0aW5ncywgUGVyc2lzdGVuY2VTZXR0aW5ncywgQ29sbGVjdGlvblJlZmVyZW5jZSwgRG9jdW1lbnRSZWZlcmVuY2UsIFF1ZXJ5Rm4sIFF1ZXJ5R3JvdXBGbiwgQXNzb2NpYXRlZFJlZmVyZW5jZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBBbmd1bGFyRmlyZXN0b3JlRG9jdW1lbnQgfSBmcm9tICcuL2RvY3VtZW50L2RvY3VtZW50JztcbmltcG9ydCB7IEFuZ3VsYXJGaXJlc3RvcmVDb2xsZWN0aW9uIH0gZnJvbSAnLi9jb2xsZWN0aW9uL2NvbGxlY3Rpb24nO1xuaW1wb3J0IHsgQW5ndWxhckZpcmVzdG9yZUNvbGxlY3Rpb25Hcm91cCB9IGZyb20gJy4vY29sbGVjdGlvbi1ncm91cC9jb2xsZWN0aW9uLWdyb3VwJztcbmltcG9ydCB7IEZpcmViYXNlRmlyZXN0b3JlLCBGaXJlYmFzZU9wdGlvbnMsIEZpcmViYXNlQXBwQ29uZmlnLCDJtUFuZ3VsYXJGaXJlU2NoZWR1bGVycyB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUnO1xuaW1wb3J0IHsgZmlyZXN0b3JlIH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEVuYWJsZVBlcnNpc3RlbmNlVG9rZW46IEluamVjdGlvblRva2VuPGJvb2xlYW4+O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgUGVyc2lzdGVuY2VTZXR0aW5nc1Rva2VuOiBJbmplY3Rpb25Ub2tlbjxmaXJlc3RvcmUuUGVyc2lzdGVuY2VTZXR0aW5ncyB8IHVuZGVmaW5lZD47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBGaXJlc3RvcmVTZXR0aW5nc1Rva2VuOiBJbmplY3Rpb25Ub2tlbjxmaXJlc3RvcmUuU2V0dGluZ3M+O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgRU5BQkxFX1BFUlNJU1RFTkNFOiBJbmplY3Rpb25Ub2tlbjxib29sZWFuPjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFBFUlNJU1RFTkNFX1NFVFRJTkdTOiBJbmplY3Rpb25Ub2tlbjxmaXJlc3RvcmUuUGVyc2lzdGVuY2VTZXR0aW5ncyB8IHVuZGVmaW5lZD47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBTRVRUSU5HUzogSW5qZWN0aW9uVG9rZW48ZmlyZXN0b3JlLlNldHRpbmdzPjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERlZmF1bHRGaXJlc3RvcmVTZXR0aW5nczogZmlyZXN0b3JlLlNldHRpbmdzO1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gYXNzb2NpYXRlUXVlcnkoY29sbGVjdGlvblJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSwgcXVlcnlGbj86IChyZWY6IGFueSkgPT4gYW55KTogQXNzb2NpYXRlZFJlZmVyZW5jZTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFuZ3VsYXJGaXJlc3RvcmUge1xuICAgIHJlYWRvbmx5IGZpcmVzdG9yZTogRmlyZWJhc2VGaXJlc3RvcmU7XG4gICAgcmVhZG9ubHkgcGVyc2lzdGVuY2VFbmFibGVkJDogT2JzZXJ2YWJsZTxib29sZWFuPjtcbiAgICByZWFkb25seSBzY2hlZHVsZXJzOiDJtUFuZ3VsYXJGaXJlU2NoZWR1bGVycztcbiAgICByZWFkb25seSBrZWVwVW5zdGFibGVVbnRpbEZpcnN0OiA8VD4ob2JzOiBPYnNlcnZhYmxlPFQ+KSA9PiBPYnNlcnZhYmxlPFQ+O1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnM6IEZpcmViYXNlT3B0aW9ucywgbmFtZU9yQ29uZmlnOiBzdHJpbmcgfCBGaXJlYmFzZUFwcENvbmZpZyB8IG51bGwgfCB1bmRlZmluZWQsIHNob3VsZEVuYWJsZVBlcnNpc3RlbmNlOiBib29sZWFuIHwgbnVsbCwgc2V0dGluZ3M6IFNldHRpbmdzIHwgbnVsbCwgcGxhdGZvcm1JZDogT2JqZWN0LCB6b25lOiBOZ1pvbmUsIHBlcnNpc3RlbmNlU2V0dGluZ3M6IFBlcnNpc3RlbmNlU2V0dGluZ3MgfCBudWxsKTtcbiAgICBjb2xsZWN0aW9uPFQ+KHBhdGg6IHN0cmluZywgcXVlcnlGbj86IFF1ZXJ5Rm4pOiBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbjxUPjtcbiAgICBjb2xsZWN0aW9uPFQ+KHJlZjogQ29sbGVjdGlvblJlZmVyZW5jZSwgcXVlcnlGbj86IFF1ZXJ5Rm4pOiBBbmd1bGFyRmlyZXN0b3JlQ29sbGVjdGlvbjxUPjtcbiAgICBjb2xsZWN0aW9uR3JvdXA8VD4oY29sbGVjdGlvbklkOiBzdHJpbmcsIHF1ZXJ5R3JvdXBGbj86IFF1ZXJ5R3JvdXBGbik6IEFuZ3VsYXJGaXJlc3RvcmVDb2xsZWN0aW9uR3JvdXA8VD47XG4gICAgZG9jPFQ+KHBhdGg6IHN0cmluZyk6IEFuZ3VsYXJGaXJlc3RvcmVEb2N1bWVudDxUPjtcbiAgICBkb2M8VD4ocmVmOiBEb2N1bWVudFJlZmVyZW5jZSk6IEFuZ3VsYXJGaXJlc3RvcmVEb2N1bWVudDxUPjtcbiAgICBjcmVhdGVJZCgpOiBzdHJpbmc7XG59XG4iXX0=